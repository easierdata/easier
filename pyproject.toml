[tool.poetry]
name = "code"
version = "0.1.0"
description = "EASIER is our sandbox env for developing and testing all things Dweb."
authors = ["Seth Docherty <sddocherty@gmail.com>", "Zheng Liu <zliu1208@umd.edu>", "Matthew Nanas <mnanas@umd.edu>"]
readme = "README.md"
repository = "https://github.com/easierdata/easier"
license = "MIT License"
packages = []

[tool.poetry.dependencies]
python = ">=3.9,<3.12"
boto3 = "==1.26.160"
browser-cookie3 = "==0.19.1"
fiona = "==1.9.4.post1"
flask = "==2.3.2"
flask-cors = "==3.0.10"
folium = "==0.14.0"
geopandas = "==0.13.2"
matplotlib = "==3.7.1"
numpy = "==1.25.0"
mapclassify = "==2.5.0" # Used for geoDataFrame.explore()
pandas = "==2.0.2"
planetary-computer = "==0.5.1"
pyproj = "==3.6.0"
pystac-client = "==0.7.1"
python-dotenv = "==1.0.0" # Used for .env file
requests = "==2.31.0"
rich = "==13.4.2"
rtree = "==1.0.1"
scipy = "==1.10.1" # KDtree
shapely = "==2.0.1"
ipfs-api = "==0.2.3"
ipykernel = "^6.21.1" # Package provides the required kernal to run jupyter notebooks

[tool.poetry.group.dev.dependencies]
black = "==23.3.0" # formatting
ruff = "^0.1.5"
isort = "^5.12.0"
#flake8 = "==6.0.0" # for linting
pre-commit = "==3.3.3" # Used for pre-commit hooks
mypy = "^1.9.0"

[tool.black]
line-length = 88

include = '''
(
    \.pyi?$
|  \.ipynb$
)
'''

exclude = '''
/(
	^\.git
| ^\.mypy_cache
| __pycache__
| ^\.venv
)/
'''

[tool.ruff]
# The directories to consider/allow import relative to the project root directory.
#src = ["code", "data", "output"]

# Allow autofix for all enabled rules (when `--fix`) is provided.
# Note, if using pre-commit, ensure that ruff is placed before other formatting tool
# hooks as the autofix behavior can output code changes that require reformatting.
fix = true
unfixable = []

# Enumerate all fixed violations and the associated violation id.
show-fixes = true

# Common file and directory settings to include/exclude.
include = ["*.py", "*.pyi", "**/pyproject.toml", "*.ipynb"]
exclude = [
    "__pycache__",
    "__pypackages__",
    ".direnv",
    ".eggs",
    ".git-rewrite",
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".tox",
    ".venv",
    "build",
    "dist",
    "venv",
]

# Same as Black.
line-length = 88

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
